.TH "TracknTrace.categorizer.categorizer" 3 "Smart Meter Interpreter Documentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TracknTrace.categorizer.categorizer
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBDoAllCategories\fP (categories, data, cats, ScanList=None)"
.br
.ti -1c
.RI "\fBEventCategorizerFcn\fP (categories, data, cats, target)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBargs\fP = parser\&.parse_args()"
.br
.ti -1c
.RI "\fBauto_open\fP"
.br
.ti -1c
.RI "\fBbackend\fP"
.br
.ti -1c
.RI "\fBchained_assignment\fP"
.br
.ti -1c
.RI "\fBconfig\fP = configparser\&.ConfigParser()"
.br
.ti -1c
.RI "\fBdf\fP = \fBDoAllCategories\fP([list(\fBFinalcategories\fP),Finalcategories\&.values\&.tolist()], \fBEventData\fP, \fBFinalcategories\fP, ScanList = \fBScanlist\fP)"
.br
.ti -1c
.RI "\fBdfnorm\fP = \fBdf\fP/df\&.max()"
.br
.ti -1c
.RI "\fBEventData\fP = pd\&.read_csv('{}_Events_Export\&.csv'\&.format(args\&.instance))"
.br
.ti -1c
.RI "\fBfig\fP = df\&.plot()"
.br
.ti -1c
.RI "\fBFinalcategories\fP = pd\&.read_csv('{}_categories_Export\&.csv'\&.format(args\&.instance))"
.br
.ti -1c
.RI "\fBhelp\fP"
.br
.ti -1c
.RI "\fBinplace\fP"
.br
.ti -1c
.RI "\fBoptionxform\fP"
.br
.ti -1c
.RI "\fBparser\fP = argparse\&.ArgumentParser()"
.br
.ti -1c
.RI "\fBresult_list\fP = config\&.read('{}\&.metadata'\&.format(args\&.instance))"
.br
.ti -1c
.RI "\fBScanlist\fP = \fBconfig\fP['eventdetection']['Scanlist']\&.split(',')"
.br
.ti -1c
.RI "\fBtype\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "DoAllCategories ( categories,  data,  cats,  ScanList = \fRNone\fP)"

.PP
.nf
Creates map of category:data and sums results per category for all data

@param categories  data column: category translation pairs
@param data  original data to categorize
@param cats  Scaling of detected event

@return df  dataframe which dumps original data and replaces with event detections for all data
.fi
.PP
 
.PP
Definition at line \fB26\fP of file \fBcategorizer\&.py\fP\&.
.SS "EventCategorizerFcn ( categories,  data,  cats,  target)"

.PP
.nf
Creates map of category:data and sums results per category

@param categories  data column: category translation pairs
@param data  original data to categorize
@param cats  Scaling of detected event
@param target  The target trends in data to dp event categorization on\&.

@return df  dataframe which dumps original data and replaces with event detections for target
.fi
.PP
 
.PP
Definition at line \fB8\fP of file \fBcategorizer\&.py\fP\&.
.SH "Variable Documentation"
.PP 
.SS "args = parser\&.parse_args()"

.PP
Definition at line \fB59\fP of file \fBcategorizer\&.py\fP\&.
.SS "auto_open"

.PP
Definition at line \fB93\fP of file \fBcategorizer\&.py\fP\&.
.SS "backend"

.PP
Definition at line \fB5\fP of file \fBcategorizer\&.py\fP\&.
.SS "chained_assignment"

.PP
Definition at line \fB6\fP of file \fBcategorizer\&.py\fP\&.
.SS "config = configparser\&.ConfigParser()"

.PP
Definition at line \fB81\fP of file \fBcategorizer\&.py\fP\&.
.SS "df = \fBDoAllCategories\fP([list(\fBFinalcategories\fP),Finalcategories\&.values\&.tolist()], \fBEventData\fP, \fBFinalcategories\fP, ScanList = \fBScanlist\fP)"

.PP
Definition at line \fB88\fP of file \fBcategorizer\&.py\fP\&.
.SS "dfnorm = \fBdf\fP/df\&.max()"

.PP
Definition at line \fB94\fP of file \fBcategorizer\&.py\fP\&.
.SS "EventData = pd\&.read_csv('{}_Events_Export\&.csv'\&.format(args\&.instance))"

.PP
Definition at line \fB62\fP of file \fBcategorizer\&.py\fP\&.
.SS "fig = df\&.plot()"

.PP
Definition at line \fB92\fP of file \fBcategorizer\&.py\fP\&.
.SS "Finalcategories = pd\&.read_csv('{}_categories_Export\&.csv'\&.format(args\&.instance))"

.PP
Definition at line \fB65\fP of file \fBcategorizer\&.py\fP\&.
.SS "help"

.PP
Definition at line \fB58\fP of file \fBcategorizer\&.py\fP\&.
.SS "inplace"

.PP
Definition at line \fB63\fP of file \fBcategorizer\&.py\fP\&.
.SS "optionxform"

.PP
Definition at line \fB82\fP of file \fBcategorizer\&.py\fP\&.
.SS "parser = argparse\&.ArgumentParser()"

.PP
Definition at line \fB56\fP of file \fBcategorizer\&.py\fP\&.
.SS "result_list = config\&.read('{}\&.metadata'\&.format(args\&.instance))"

.PP
Definition at line \fB83\fP of file \fBcategorizer\&.py\fP\&.
.SS "Scanlist = \fBconfig\fP['eventdetection']['Scanlist']\&.split(',')"

.PP
Definition at line \fB84\fP of file \fBcategorizer\&.py\fP\&.
.SS "type"

.PP
Definition at line \fB57\fP of file \fBcategorizer\&.py\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Smart Meter Interpreter Documentation from the source code\&.
